name: Nightly Release ARMv8-a

on:
  schedule:
    - cron: 0 5 * * *
  workflow_dispatch:
    inputs:
      nightly_release_tag:
        type: string
        description: Carbon language release tag source

env:
  CARBON_LANG_WORKDIR: carbon-lang
  BUILDER_WORKDIR: builder

permissions:
  contents: write
      
jobs:
  release:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
        with:
          repository: "carbon-language/carbon-lang"
          path: ${{ env.CARBON_LANG_WORKDIR }}
          clean: false
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/checkout@v4
        with:
          path: ${{ env.BUILDER_WORKDIR }}
          clean: false

      - name: Checkout to Latest Tag and Set nightly_date
        working-directory: ${{ env.CARBON_LANG_WORKDIR }}
        env:
          latest_tag: ${{ inputs.nightly_release_tag }}
        run: |
          if [ -z "${latest_tag}" ]; then
            latest_tag=$(git tag --list "*nightly*" --sort=-v:refname | head -n 1)
          fi
          echo Latest release tags: $latest_tag
          git checkout $latest_tag
          echo "nightly_date=$(echo $latest_tag | grep -oE '[0-9]{4}\.[0-9]{2}\.[0-9]{2}')" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          path: ~/.cache/carbon-lang-build-cache
          key: ${{ runner.os }}-bazel_disk_cache-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-bazel_disk_cache

      - name: Apply patches
        working-directory: ${{ env.CARBON_LANG_WORKDIR }}
        run: |
          git apply ../${{ env.BUILDER_WORKDIR }}/patches/*patch

      - name: Install Build Dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get install -y \
            clang \
            llvm \
            libc++-dev \
            libc++abi-dev \
            lld

      - name: Create user.bazelrc
        working-directory: ${{ env.CARBON_LANG_WORKDIR }}
        run: |
          cat > user.bazelrc << EOF
          common --custom_malloc=@bazel_tools//tools/cpp:malloc
          build --jobs=32
          build --nostamp
          build --verbose_failures
          test --test_output=errors
          EOF
          ./scripts/run_bazelisk.py info

      - name: Build release
        working-directory: ${{ env.CARBON_LANG_WORKDIR }}
        run: |
          ./scripts/run_bazelisk.py test -c opt \
            --pre_release=nightly --nightly_date=${{ env.nightly_date }} \
            //toolchain \
            //toolchain/install:carbon_toolchain_tar_gz_rule \
            //toolchain/install:carbon_toolchain_tar_gz_test

      - name: Extract the release version
        working-directory: ${{ env.CARBON_LANG_WORKDIR }}
        run: |
          ./bazel-bin/toolchain/carbon version
          VERSION=$( \
            ./bazel-bin/toolchain/carbon version \
            | cut -d' ' -f5 | cut -d'+' -f1)
          echo "release_version=$VERSION" >> $GITHUB_ENV

      - name: Release
        working-directory: ${{ env.BUILDER_WORKDIR }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ env.release_version }} \
            --title "Nightly build ${{ env.nightly_date }}" \
            --notes "ref: https://github.com/carbon-language/carbon-lang/releases/tag/v${{ env.release_version }}" \
            --prerelease \
            --target main \
            ../${{ env.CARBON_LANG_WORKDIR }}/bazel-bin/toolchain/install/carbon_toolchain-${{ env.release_version }}.tar.gz
